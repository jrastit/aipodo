// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ItemBuy extends ethereum.Event {
  get params(): ItemBuy__Params {
    return new ItemBuy__Params(this);
  }
}

export class ItemBuy__Params {
  _event: ItemBuy;

  constructor(event: ItemBuy) {
    this._event = event;
  }

  get hash(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ItemCreated extends ethereum.Event {
  get params(): ItemCreated__Params {
    return new ItemCreated__Params(this);
  }
}

export class ItemCreated__Params {
  _event: ItemCreated;

  constructor(event: ItemCreated) {
    this._event = event;
  }

  get hash(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get full_price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get parents(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class ItemPay extends ethereum.Event {
  get params(): ItemPay__Params {
    return new ItemPay__Params(this);
  }
}

export class ItemPay__Params {
  _event: ItemPay;

  constructor(event: ItemPay) {
    this._event = event;
  }

  get hash(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Aipodo__get_itemResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;
  value3: BigInt;
  value4: Array<BigInt>;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: Address,
    value3: BigInt,
    value4: Array<BigInt>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigIntArray(this.value4));
    return map;
  }

  getHash(): BigInt {
    return this.value0;
  }

  getPrice(): BigInt {
    return this.value1;
  }

  getOwner(): Address {
    return this.value2;
  }

  getFull_price(): BigInt {
    return this.value3;
  }

  getParents(): Array<BigInt> {
    return this.value4;
  }
}

export class Aipodo extends ethereum.SmartContract {
  static bind(address: Address): Aipodo {
    return new Aipodo("Aipodo", address);
  }

  get_item(_hash: BigInt): Aipodo__get_itemResult {
    let result = super.call(
      "get_item",
      "get_item(uint256):(uint256,uint256,address,uint256,uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_hash)]
    );

    return new Aipodo__get_itemResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigIntArray()
    );
  }

  try_get_item(_hash: BigInt): ethereum.CallResult<Aipodo__get_itemResult> {
    let result = super.tryCall(
      "get_item",
      "get_item(uint256):(uint256,uint256,address,uint256,uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_hash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Aipodo__get_itemResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigIntArray()
      )
    );
  }

  get_item_list(): Array<BigInt> {
    let result = super.call("get_item_list", "get_item_list():(uint256[])", []);

    return result[0].toBigIntArray();
  }

  try_get_item_list(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "get_item_list",
      "get_item_list():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  get_owner_item(): Array<BigInt> {
    let result = super.call(
      "get_owner_item",
      "get_owner_item():(uint256[])",
      []
    );

    return result[0].toBigIntArray();
  }

  try_get_owner_item(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "get_owner_item",
      "get_owner_item():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  get_price(_hash: BigInt): BigInt {
    let result = super.call("get_price", "get_price(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_hash)
    ]);

    return result[0].toBigInt();
  }

  try_get_price(_hash: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("get_price", "get_price(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_hash)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  item_list_array(param0: BigInt): BigInt {
    let result = super.call(
      "item_list_array",
      "item_list_array(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_item_list_array(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "item_list_array",
      "item_list_array(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  my_balance(): BigInt {
    let result = super.call("my_balance", "my_balance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_my_balance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("my_balance", "my_balance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class Add_itemCall extends ethereum.Call {
  get inputs(): Add_itemCall__Inputs {
    return new Add_itemCall__Inputs(this);
  }

  get outputs(): Add_itemCall__Outputs {
    return new Add_itemCall__Outputs(this);
  }
}

export class Add_itemCall__Inputs {
  _call: Add_itemCall;

  constructor(call: Add_itemCall) {
    this._call = call;
  }

  get _hash(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _parents(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class Add_itemCall__Outputs {
  _call: Add_itemCall;

  constructor(call: Add_itemCall) {
    this._call = call;
  }
}

export class Buy_itemCall extends ethereum.Call {
  get inputs(): Buy_itemCall__Inputs {
    return new Buy_itemCall__Inputs(this);
  }

  get outputs(): Buy_itemCall__Outputs {
    return new Buy_itemCall__Outputs(this);
  }
}

export class Buy_itemCall__Inputs {
  _call: Buy_itemCall;

  constructor(call: Buy_itemCall) {
    this._call = call;
  }

  get _hash(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class Buy_itemCall__Outputs {
  _call: Buy_itemCall;

  constructor(call: Buy_itemCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
